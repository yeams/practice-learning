# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sys_pb2 as sys__pb2


class ShopServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PricesNumber = channel.unary_unary(
        '/ShopService/PricesNumber',
        request_serializer=sys__pb2.TimeRequest.SerializeToString,
        response_deserializer=sys__pb2.priceInfo.FromString,
        )
    self.SalesNUmber = channel.unary_unary(
        '/ShopService/SalesNUmber',
        request_serializer=sys__pb2.SalesQuest.SerializeToString,
        response_deserializer=sys__pb2.salesInfo.FromString,
        )


class ShopServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PricesNumber(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SalesNUmber(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ShopServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PricesNumber': grpc.unary_unary_rpc_method_handler(
          servicer.PricesNumber,
          request_deserializer=sys__pb2.TimeRequest.FromString,
          response_serializer=sys__pb2.priceInfo.SerializeToString,
      ),
      'SalesNUmber': grpc.unary_unary_rpc_method_handler(
          servicer.SalesNUmber,
          request_deserializer=sys__pb2.SalesQuest.FromString,
          response_serializer=sys__pb2.salesInfo.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ShopService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
